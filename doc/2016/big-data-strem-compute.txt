

大数据流式计算关键技术及系统实例
http://wenku.baidu.com/view/7176dbab8bd63186bdebbc27.html

Big Data Stream Computing: Technologies and Instances

大数据计算 批量 流式 
低延迟 高吞吐  持续可靠运行
流式大数据特点  实时性 易失性 突发性 无序性 无限性

系统结构、数据传输、应用接口、高可用技

可伸缩性、系统容错、状态一致性、负载均衡、数据吞吐量

云计算、物联网、移动互连、社交媒体

大数据价值的有效实现离不开A,B,C 这三大要素,
即大分析(big Analytic)、大带宽(big Bandwidth)和大内容(big Content).


批量计算(batch computing)和流式计算(stream computing)

Hadoop 是典型的大数据批量计算架构,由HDFS 分布式文件系统负责静态数据的存储,
并通过MapReduce 将计算逻辑分配到各数据节点进行数据计算和价值发现


流动的数据到来后在内存中直接进行数据的实时计算
Twitter 的Storm、Yahoo 的S4 是典型的流式数据计算架构,数据在任务拓扑中被计算,并输出有价值的信息

流式计算中,数据往往是最近一个时间窗口内的,因此数据延迟往往较短,实时性较强,但数据的精确程度往往较低

金融银行业应用、互联网应用和物联网应用

5大数据流式计算系统

Twitter Storm 
Yahoo S4 
Facebook Data Freeway and Puma
Linkedin Kafka
Microsoft TimeStream

IBM 的商业流式计算系统StreamBase
Berkeley 的交互式实时计算系统Spark
专门进行复杂事件处理(complex event processing,简称CEP)的Esper


银行实时监控 

风险管理 包括信用卡诈骗、保险诈骗、证券交易诈骗、程序交易等,需要实时跟踪发现
营销管理 根据客户信用卡消费记录,掌握客户的消费习惯和偏好,预测客户未来的消费需求,并为其推荐个性化的金融产品和服务;
商业智能 掌握金融银行系统内部各系统的实时数据,实现对全局状态的监控和优化,并提供决策支持.

互联网领域的应用

搜索引擎
  搜索页点击付费广告 广告位置 广告内容  客户偏好、浏览历史、地理位置等
社交网站 实时分析用户的状态信息 及时提供最新的用户分享信息到相关的朋友,准确地推荐朋友,推荐主题,提升用户体验,并能及时发现和屏蔽各种欺骗行为.

物联网领域的应用

 传感器产生大量数据.  包含时间、位置、环境和行为等内容

智能交通.通过传感器实时感知车辆、道路的状态,并分析和预测一定范围、一段时间内的道路流量情况,以便有效地进行分流、调度和指挥;
环境监控.通过传感器和移动终端,对一个地区的环境综合指标进行实时监控、远程查看、智能联动、远程控制,系统地解决综合环境问题.


流式大数据特征

有向无环图 DAG (directed acyclic graph )
实时性 易失性 突发性 无序性 无限性

系统架构
对称式架构 主从式系统架构



系统中各个节点的功能是相同的,具有良好的可伸缩性;
但由于不存在中心节点,在资源调度、系统容错、负载均衡等方面需要通过分布式协议实现.
例如,S4 通过Zookeeper实现系统容错、负载均衡等功能;

主从式系统架构

系统存在一个主节点和多个从节点,主节点负责系统资源的管理和任务的协调,并完成系统容错、负载均衡等方面的工作;
从节点负责接收来自于主节点的任务,并在计算完成后进行反馈.各个从节点间没有数据往来,整个系统的运行完全依赖于主节点控制.

数据传输  
 推送 push 拉取 pull

主动推送 上游节点产生或计算完数据后,主动将数据发送到相应的下游节点
被动拉取方式.只有下游节点显式进行数据请求,上游节点才会将数据传输到下游节点


实时性 负载均衡


编程接口

编程接口是方便用户根据流式计算的任务特征,通过有向任务图来描述任务内在逻辑和依赖关系,
并编程实现任务图中各节点的处理功能.用户策略的定制、业务流程的描述和具体应用的实现,
需要通过大数据流式计算系统提供的应用编程接口.

大多数开源大数据流式计算系统均提供了类似于MapReduce 的类MR 用户编程接口.
例如:Storm 提供Spout 和Bolt 应用编程接口,用户只需要定制Spout 和Bolt 的功能,并规定数据流在各个Bolt 间的内在流向,
明确数据流的有向无环图,其他具体细节的实现方式用户不需要太多关心,即可满足对流式大数据的高效、实时计算;
也有部分大数据流式计算系统为用户提供了类SQL 的应用编程接口,并给出了相应的组件,便于应用功能的实现;
StreamBase 系统不仅为用户提供了类SQL 的应用编程接口来描述计算过程,也借助图形化用户视窗为用户提供了丰富的组件.

高可用技术


大数据流式计算系统高可用是通过状态备份和故障恢复策略实现的.
当故障发生后,系统根据预先定义的策略进行数据的重放和恢复.按照实现策略,
可以细分为被动等待(passive standby)、主动等待(active standby)和上游备份(upstream backup)这3 种策略


系统故障恢复
资源调度
负载均衡
数据在任务拓扑中的路由策略



Twitter  Storm
核心部分使用了高效流式计算的函数式语言Clojure 编写,极大地提高了系统性能.
但为了方便用户使用,支持用户使用任意编程语言进行项目的开发.

任务拓扑(topology)是Storm 的逻辑单元,一个实时应用的计算任务将被打包为任务拓扑后发布

一个任务拓扑是由一系列Spout 和Bolt 构成的有向无环图,通过数据流(stream)实现Spout 和Bolt 之间的关联,

Spout 负责从外部数据源不间断地读取数据,并以Tuple 元组的形式发送给相应的Bolt;
Bolt 负责对接收到的数据流进行计算,实现过滤、聚合、查询等具体功能,可以级联,也可以向外发送数据流


Tuple 元组

数据流作业 编号 

Storm 通过系统级组件Acker 实现对数据流的全局计算路径的跟踪,并保证该数据流被完全执行.
其基本原理是为数据流中的每个分组进行编号,并通过异或运算来实现对其计算路径的跟踪.

Storm 采用主从系统架构,在一个Storm 系统中有两类节点
(即,一个主节点Nimbus、多个从节点Supervisor)及3 种运行环境(即,master,cluster 和slaves)构成,

主节点Nimbus   master  无状态 负责全局的资源分配、任务调度、状态监控和故障检测
接收客户端提交的任务 分配任务到从节点Supervisor 
同时把该任务的元信息写入Zookeeper 目录中

主节点Nimbus 通过Zookeeper 实时监控任务的执行情况,当出现故障时进行故障检测,
并重启失败的从节点Supervisor 和工作进程Worker
每个Worker 内部,会有多个Executor,每个Executor 对应一个线程.
Task 负责具体数据的计算,即用户所实现的Spout/Blot 实例.每个Executor 会对应一个或多个Task,


Zookeeper 是一个针对大型分布式系统的可靠协调服务和元数据存储系统

Storm 系统的主要特征

  简单编程模型.用户只需编写Spout 和Bolt 部分的实现,因此极大地降低了实时大数据流式计算的复杂性;
  支持多种编程语言.默认支持Clojure,Java,Ruby 和Python
  作业级容错性.可以保证每个数据流作业被完全执行
  水平可扩展.计算可以在多个线程、进程和服务器之间并发执行
  快速消息计算.通过ZeroMQ 作为其底层消息队列,保证了消息能够得到快速的计算.


Storm 系统存在的不足主要包括:资源分配没有考虑任务拓扑的结构特征,无法适应数据负载的动态变化;
采用集中式的作业级容错机制,在一定程度上限制了系统的可扩展性.


Yahoo S4

处理单元PE(processing element)

函数 事件类型 主键 键值















